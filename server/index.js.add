// Special handling for ML frameworks in Python
if (language.toLowerCase() === 'python') {
  if (code.includes('tensorflow') || code.includes('keras')) {
    socket.emit('output', { 
      output: `Detected TensorFlow/Keras usage. Checking if installed...\n`, 
      error: false 
    });
    
    try {
      // Check if tensorflow is installed
      await execPromise('python -c "import tensorflow as tf; print(tf.__version__)"');
      socket.emit('output', { 
        output: `TensorFlow is already installed\n`, 
        error: false 
      });
    } catch (err) {
      socket.emit('output', { 
        output: `Installing TensorFlow. This might take a moment...\n`, 
        error: false 
      });
      try {
        await execPromise('pip install tensorflow --no-cache-dir');
        socket.emit('output', { 
          output: `TensorFlow installed successfully\n`, 
          error: false 
        });
      } catch (e) {
        socket.emit('output', { 
          output: `Failed to install TensorFlow: ${e.message}\nTrying to continue execution anyway...\n`, 
          error: true 
        });
      }
    }
  }
  
  if (code.includes('torch') || code.includes('pytorch')) {
    socket.emit('output', { 
      output: `Detected PyTorch usage. Checking if installed...\n`, 
      error: false 
    });
    
    try {
      await execPromise('python -c "import torch; print(torch.__version__)"');
      socket.emit('output', { 
        output: `PyTorch is already installed\n`, 
        error: false 
      });
    } catch (err) {
      socket.emit('output', { 
        output: `Installing PyTorch. This might take a moment...\n`, 
        error: false 
      });
      try {
        await execPromise('pip install torch --no-cache-dir');
        socket.emit('output', { 
          output: `PyTorch installed successfully\n`, 
          error: false 
        });
      } catch (e) {
        socket.emit('output', { 
          output: `Failed to install PyTorch: ${e.message}\nTrying to continue execution anyway...\n`, 
          error: true 
        });
      }
    }
  }
  
  if (code.includes('sklearn') || code.includes('scikit-learn')) {
    socket.emit('output', { 
      output: `Detected scikit-learn usage. Checking if installed...\n`, 
      error: false 
    });
    
    try {
      await execPromise('python -c "import sklearn; print(sklearn.__version__)"');
      socket.emit('output', { 
        output: `scikit-learn is already installed\n`, 
        error: false 
      });
    } catch (err) {
      socket.emit('output', { 
        output: `Installing scikit-learn. This might take a moment...\n`, 
        error: false 
      });
      try {
        await execPromise('pip install scikit-learn --no-cache-dir');
        socket.emit('output', { 
          output: `scikit-learn installed successfully\n`, 
          error: false 
        });
      } catch (e) {
        socket.emit('output', { 
          output: `Failed to install scikit-learn: ${e.message}\nTrying to continue execution anyway...\n`, 
          error: true 
        });
      }
    }
  }
}
